[CRAB]

jobtype = cmssw
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = cern
use_server = 1
[CMSSW]

### The data you want to access (to be found on DBS)
#datasetpath = /DYJetsToLL_TuneZ2_M-50_7TeV-madgraph-tauola/Summer11-PU_S4_START42_V11-v1/AODSIM
datasetpath = /DYJetsToLL_TuneZ2_M-50_7TeV-madgraph-tauola/Fall11-PU_S6_START42_V14B-v1/AODSIM 
#datasetpath = /DYToMuMu_M-20_TuneZ2_7TeV-pythia6/Summer11-PU_S4_START42_V11-v2/AODSIM

#datasetpath = /TTJets_TuneZ2_7TeV-madgraph-tauola/Summer11-PU_S4_START42_V11-v2/AODSIM
#datasetpath = /WJetsToLNu_TuneZ2_7TeV-madgraph-tauola/Summer11-PU_S4_START42_V11-v1/AODSIM
#datasetpath = /QCD_Pt-20_MuEnrichedPt-10_TuneZ2_7TeV-pythia6/Summer11-PU_S3_START42_V11-v2/AODSIM
#datasetpath = /WWJetsTo2L2Nu_TuneZ2_7TeV-madgraph-tauola/Summer11-PU_S4_START42_V11-v1/AODSIM

#datasetpath = /WZJetsTo3LNu_TuneZ2_7TeV-madgraph-tauola/Summer11-PU_S4_START42_V11-v1/AODSIM
#datasetpath = /ZZJetsTo4L_TuneZ2_7TeV-madgraph-tauola/Summer11-PU_S4_START42_V11-v1/AODSIM 

### The ParameterSet you want to use
pset=Zmumu_cfg.py

### Splitting parameters
#lumi_mask=Cert_132440-133928_StreamExpress_Commissioning10-Express_DQM_JSON.txt
#total_number_of_lumis = -1
#lumis_per_job = 10

### Splitting parameters
#total_number_of_events=1000000
total_number_of_events=-1
events_per_job = 50000
#number_of_jobs = 20

### The output files (comma separated list)
#output_file = DYJetsToLL_M_50_Summer11.root
output_file = DYJetsToLL_M_50_Fall11_NO13_NO15.root
#output_file = DYToMuMu_M_20_Summer11.root

#output_file = TTJets.root
#output_file = WJetsToLNu.root
#output_file = QCD_Pt_20_MuEnrichedPt_10.root
#output_file = WWJetsTo2L2Nu.root

#output_file = WZJetsTo3LNu.root
#output_file = ZZJetsTo4L.root


[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = ZmumuPythia

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir=/raid/lenzip/CMSSW/CMSSW_3_1_2/src/Firenze/Reduction/test/ZmumuPythia 

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint 

#user_remote_dir = /user/s/sandro/TestDeltaR/DYJetsToLL_M_50/DYJetsToLL_M_50_Summer11
user_remote_dir = /user/s/sandro/TestDeltaR/DYJetsToLL_M_50/DYJetsToLL_M_50_Fall11_NO13_NO15
#user_remote_dir = /user/s/sandro/TestDeltaR/DYToMuMu_M_20/DYToMuMu_M_20_Summer11

#user_remote_dir = /user/s/sandro/TestSimone/DYJetsToLL_M_50
#user_remote_dir = /user/s/sandro/TestSimone/DYToMuMu_M_20_OK_si13
#user_remote_dir = /user/s/sandro/TestSimone/TTJets
#user_remote_dir = /user/s/sandro/TestSimone/WJetsToLNu_OK
#user_remote_dir = /user/s/sandro/TestSimone/QCD_Pt_20_MuEnrichedPt_10
#user_remote_dir = /user/s/sandro/TestSimone/WWJetsTo2L2Nu_OK

#user_remote_dir = /user/s/sandro/TestSimone/WZJetsTo3LNu
#user_remote_dir = /user/s/sandro/TestSimone/ZZJetsTo4L


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID] 
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list =
#ce_white_list =

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

